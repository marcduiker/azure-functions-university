{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Changing the template for POST requests",
  "steps": [
    {
      "file": "HelloWorldHttpTrigger/function.json",
      "selection": {
        "start": {
          "line": 8,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 8
        }
      },
      "description": "Let's change the function to also allow POST requests and test it by posting a request with JSON content in the body.  Add the `\"post\"` entry in the `\"methods\"`array in the `function.json` file.",
      "title": "Change function.json to enable HTTP POST requests"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 10,
          "character": 5
        },
        "end": {
          "line": 10,
          "character": 32
        }
      },
      "description": "The function in the `index.ts` file currently only handles GET requests. We need to add some logic to use the query string for GET and the request body for POST requests. This can be done by checking the method property of the request parameter.",
      "title": "Implement distinction between GET and POST requests"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 5,
          "character": 4
        },
        "end": {
          "line": 5,
          "character": 21
        }
      },
      "description": " Change the declaration of the `name` variable to `let name: string` and remove the assignment of an value. We will assign values to this variable depending on the HTTP method. Therefore we change the declaration of the `name` variable to `let name: string` and remove the assignment of an from the request.",
      "title": "Add local variable for name"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 11,
          "character": 16
        },
        "end": {
          "line": 11,
          "character": 30
        }
      },
      "description": "We assign the value to the `name` variable from:\r\n* the query parameter `req.query.name` in case of a GET request\r\n* the `name` attribute from the request body in case of a POST request \r\n\r\n📝 **Tip** - We need to check if the body exists at all before we assign the value.",
      "title": "Fill local variable depending on request type"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 23,
          "character": 9
        },
        "end": {
          "line": 23,
          "character": 158
        }
      },
      "description": "We return a message in case of an invalid request to handle the two different error situations for GET and POST.",
      "title": "Adopt error message"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 33,
          "character": 1
        },
        "end": {
          "line": 33,
          "character": 27
        }
      },
      "description": "Now we can run the function via\r\n>> npm run start\r\n\r\nTo trigger the logic we send a POST request to the endpoint. If you're using the [VSCode REST client](https://marketplace.visualstudio.com/items?itemName=humao.rest-client) you can use this in a .http file:\r\n\r\n```http\r\nPOST http://localhost:7071/api/HelloWorldHttpTrigger\r\nContent-Type: application/json\r\n\r\n{\r\n    \"name\": \"Your name\"\r\n}\r\n```",
      "title": "Run and call the function"
    }
  ],
  "ref": "step3"
}