{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "Creating a Function App",
  "steps": [
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 17,
          "character": 28
        }
      },
      "description": "The `index.ts` file is the TypeScript file containing the code of your function exported as an Azure Function.",
      "title": "Walk through Azure Function file structure - index.ts (1)"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 3,
          "character": 52
        },
        "end": {
          "line": 3,
          "character": 68
        }
      },
      "description": "As an input we get the Azure Function _context_. This object is used by the Azure Function to exchange data between your function and the runtime. It can be used to e.g. read and set data from bindings or for writing to logs.",
      "title": "Walk through Azure Function file structure - index.ts (2)"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 3,
          "character": 70
        },
        "end": {
          "line": 3,
          "character": 86
        }
      },
      "description": "As we use the HTTP triggered Azure Function template, we also receive the HTTP request as input to our function.",
      "title": "Walk through Azure Function file structure - index.ts (3)"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 5,
          "character": 5
        },
        "end": {
          "line": 5,
          "character": 66
        }
      },
      "description": "This line of code shows us how to extract information from the request object. We can fetch data from the query parameters (`req.query`) or the body of the request (`req.body`).",
      "title": "Walk through Azure Function file structure - index.ts (4)"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 6,
          "character": 5
        },
        "end": {
          "line": 8,
          "character": 149
        }
      },
      "description": "Next we make use of the [ternary operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator) to define our response text depending on the existence of the `name` property handed over to the function via a query parameter or in the body of the HTTP request.",
      "title": "Walk through Azure Function file structure - index.ts (5)"
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 10,
          "character": 5
        },
        "end": {
          "line": 13,
          "character": 7
        }
      },
      "description": "We return the result message to the caller via the result object that is contained in the Azure Functions context. We place the response message into the body of the result object. The response status is defaulted with 200. ",
      "title": "Walk through Azure Function file structure - index.ts (6)"
    },
    {
      "file": "HelloWorldHttpTrigger/function.json",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 20,
          "character": 2
        }
      },
      "description": "The `function.json` file contains the [function specific configuration](https://docs.microsoft.com/de-de/azure/azure-functions/functions-reference#function-code).",
      "title": "Walk through Azure Function file structure - function.json"
    },
    {
      "file": "HelloWorldHttpTrigger/function.json",
      "selection": {
        "start": {
          "line": 4,
          "character": 7
        },
        "end": {
          "line": 4,
          "character": 31
        }
      },
      "description": "The attribute `\"authLevel\"`contains the authorization level for our function.",
      "title": "Walk through Azure Function file structure - function.json (authorization level)"
    },
    {
      "file": "HelloWorldHttpTrigger/function.json",
      "selection": {
        "start": {
          "line": 5,
          "character": 7
        },
        "end": {
          "line": 7,
          "character": 21
        }
      },
      "description": "In addition we define the input bindings i.e. the information that is passed into our function. In addition we define the name that we can use to access the binding in our function code. Here we use the name `\"req\"`. \r\nThe trigger binding is a special type of input binding for a function as it is the one that represents the trigger for the function execution. You can only have one trigger binding per function but multiple other input bindings. ",
      "title": "Walk through Azure Function file structure - function.json (trigger and input binding)"
    },
    {
      "file": "HelloWorldHttpTrigger/function.json",
      "selection": {
        "start": {
          "line": 8,
          "character": 6
        },
        "end": {
          "line": 11,
          "character": 8
        }
      },
      "description": "The attribute `\"methods\"`contains an array of the HTTP verbs that the user can use to invoke your function via an HTTP request.",
      "title": "Walk through Azure Function file structure - function.json (HTTP methods)"
    },
    {
      "file": "HelloWorldHttpTrigger/function.json",
      "selection": {
        "start": {
          "line": 13,
          "character": 5
        },
        "end": {
          "line": 17,
          "character": 6
        }
      },
      "description": "As counterpart of the input binding we also define an output binding for our function. This binding represents the data that is returned from our function after execution. In our scenario we have the type of `\"http\"` as output binding which means that we return an HTTP response.",
      "title": "Walk through Azure Function file structure - function.json (output binding)"
    },
    {
      "file": "HelloWorldHttpTrigger/function.json",
      "selection": {
        "start": {
          "line": 19,
          "character": 3
        },
        "end": {
          "line": 19,
          "character": 57
        }
      },
      "description": "The `\"scriptFile\"` property defines the target file for the transpilation of the TypeScript sources.",
      "title": "Walk through Azure Function file structure - function.json (script file target)"
    },
    {
      "file": "package.json",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 17,
          "character": 1
        }
      },
      "description": "The `package.json` file contains the manifest of our project. This includes also some predefined scripts for building and running our app.",
      "title": "Walk through Azure Function file structure - package.json"
    },
    {
      "file": "tsconfig.json",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 1
        }
      },
      "description": "The `tsconfig.json` file contains the default Compiler options for the transpilation process of the code to JavaScript.",
      "title": "Walk through Azure Function file structure - tsconfig.json"
    },
    {
      "file": "host.json",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 16,
          "character": 1
        }
      },
      "description": "The `host.json` file [global configuration options](https://docs.microsoft.com/en-us/azure/azure-functions/functions-host-json) for all functions in a function app.",
      "title": "Walk through Azure Function file structure - host.json"
    },
    {
      "file": "local.settings.json",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 8,
          "character": 1
        }
      },
      "description": "The `local.settings.json` file contains the [app settings and connection strings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-host-json) for local development. Make sure that the file is excluded in your `.gitignore` file. For the sake of this lesson we have excluded this file from `.gitignore`.",
      "title": "Walk through Azure Function file structure - local.settings.json "
    },
    {
      "file": "HelloWorldHttpTrigger/index.ts",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 1,
          "character": 71
        }
      },
      "description": "Before we can execute the function we first must install the dependencies via \r\n>> npm install",
      "title": "Install npm dependencies"
    },
    {
      "file": "package.json",
      "selection": {
        "start": {
          "line": 6,
          "character": 5
        },
        "end": {
          "line": 6,
          "character": 20
        }
      },
      "description": "Next we can build the the function to see if we have any errors in our code that we need to fix before the execution. To do so we use the predefined build script:\r\n>> npm run build",
      "title": "Execute the build"
    },
    {
      "file": "package.json",
      "selection": {
        "start": {
          "line": 9,
          "character": 5
        },
        "end": {
          "line": 9,
          "character": 26
        }
      },
      "description": "Now we can finally run the function via \r\n>> npm run start\r\nor via pressing `F5`\r\n\r\nYou can then trigger the function via\r\n[http://localhost:7071/api/HelloWorldHttpTrigger?name=AzureFunction](http://localhost:7071/api/HelloWorldHttpTrigger?name=AzureFunction)",
      "title": "Run the Azure Function and call the HTTP endpoint"
    }
  ],
  "ref": "main"
}